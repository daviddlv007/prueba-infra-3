name: Terraform Deploy

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'infra/terraform/environments/dev/**'
      - 'infra/terraform/modules/**'
      - '.github/workflows/terraform-deploy.yml'

env:
  AWS_REGION: us-east-1
  BACKEND_BUCKET: prueba-infra-3-dev-7f3a2c
  TF_STATE_KEY: state/terraform.tfstate

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: |
        cd infra/terraform/environments/dev
        terraform init -backend-config="bucket=${{ env.BACKEND_BUCKET }}" \
          -backend-config="key=${{ env.TF_STATE_KEY }}" \
          -backend-config="region=${{ env.AWS_REGION }}" \
          -backend-config="dynamodb_table=terraform-state-lock" \
          -reconfigure

    - name: Terraform Validate
      run: |
        cd infra/terraform/environments/dev
        terraform validate

    - name: Terraform Plan
      run: |
        cd infra/terraform/environments/dev
        terraform plan -var-file="terraform.tfvars" -out=tfplan

    - name: Terraform Apply
      run: |
        cd infra/terraform/environments/dev
        terraform apply -auto-approve tfplan

    - name: Output deployment information
      run: |
        cd infra/terraform/environments/dev
        terraform output -json > outputs.json
        echo "Deployment completed successfully"
      env:
        TF_WORKSPACE: default