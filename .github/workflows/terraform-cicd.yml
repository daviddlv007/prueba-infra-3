name: Terraform CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}

      - name: Validar backend remoto existe
        run: |
          BUCKET="${{ secrets.BACKEND_BUCKET }}"
          TABLE="${{ secrets.BACKEND_TABLE }}"
          REGION="${{ secrets.AWS_REGION || 'us-east-1' }}"

          echo "Verificando bucket S3..."
          if ! aws s3api head-bucket --bucket "$BUCKET" 2>/dev/null; then
            echo "ERROR: Bucket S3 $BUCKET no existe. Ejecuta create-backend primero."
            exit 1
          fi

          echo "Verificando tabla DynamoDB..."
          if ! aws dynamodb describe-table --table-name "$TABLE" >/dev/null 2>&1; then
            echo "ERROR: Tabla DynamoDB $TABLE no existe. Ejecuta create-backend primero."
            exit 1
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.6.0"

      - name: Terraform Init
        run: terraform init -input=false -backend-config="bucket=${{ secrets.BACKEND_BUCKET }}" -backend-config="region=${{ secrets.AWS_REGION || 'us-east-1' }}" -reconfigure
        working-directory: infra/terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: infra/terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan -input=false
        working-directory: infra/terraform

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -input=false -auto-approve tfplan
        working-directory: infra/terraform
