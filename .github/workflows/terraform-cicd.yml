name: Terraform CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Nombre del proyecto'
        required: false
      aws_region:
        description: 'Regi√≥n AWS'
        required: false

permissions:
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ github.event.inputs.aws_region || 'us-east-1' }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.6.0"

      - name: Terraform Init
        run: terraform init \
              -backend-config="bucket=${{ secrets.BACKEND_BUCKET }}" \
              -backend-config="region=${{ github.event.inputs.aws_region || 'us-east-1' }}" \
              -backend-config="key=terraform.tfstate" \
              -backend-config="dynamodb_table=${{ secrets.BACKEND_TABLE }}" \
              -reconfigure
        working-directory: infra/terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: infra/terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan -input=false \
              -var="backend_bucket=${{ secrets.BACKEND_BUCKET }}" \
              -var="backend_table=${{ secrets.BACKEND_TABLE }}" \
              -var="aws_region=${{ github.event.inputs.aws_region || 'us-east-1' }}" \
              -var="project_name=${{ github.event.inputs.project_name || 'prueba-infra-3' }}"
        working-directory: infra/terraform

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -input=false -auto-approve tfplan
        working-directory: infra/terraform
