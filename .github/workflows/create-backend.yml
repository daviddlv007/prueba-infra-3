name: Crear Backend
on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  create-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Leer variables desde terraform.tfvars
        id: tfvars
        run: |
          set -euo pipefail
          PROJECT=$(grep 'project_name' infra/terraform/terraform.tfvars | awk -F '=' '{print $2}' | tr -d ' "')
          REGION=$(grep 'aws_region' infra/terraform/terraform.tfvars | awk -F '=' '{print $2}' | tr -d ' "')
          echo "PROJECT=$PROJECT" >> "$GITHUB_ENV"
          echo "REGION=$REGION" >> "$GITHUB_ENV"

      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.REGION }}

      - name: Crear bucket S3 y tabla DynamoDB
        run: |
          set -euo pipefail
          BUCKET="${PROJECT}-backend"
          TABLE="terraform-state-lock"

          # Crear bucket si no existe
          if ! aws s3api head-bucket --bucket "$BUCKET" 2>/dev/null; then
            aws s3api create-bucket --bucket "$BUCKET" --region "$REGION" $( [ "$REGION" != "us-east-1" ] && echo "--create-bucket-configuration LocationConstraint=$REGION" )
            aws s3api put-bucket-encryption --bucket "$BUCKET" --server-side-encryption-configuration '{"Rules":[{"ApplyServerSideEncryptionByDefault":{"SSEAlgorithm":"AES256"}}]}'
            aws s3api put-bucket-versioning --bucket "$BUCKET" --versioning-configuration Status=Enabled
            aws s3api put-public-access-block --bucket "$BUCKET" --public-access-block-configuration BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPublicBuckets=true
            echo "Bucket creado y endurecido: $BUCKET"
          else
            echo "Bucket ya existe: $BUCKET"
          fi

          # Crear tabla DynamoDB si no existe
          if ! aws dynamodb describe-table --table-name "$TABLE" >/dev/null 2>&1; then
            aws dynamodb create-table \
              --table-name "$TABLE" \
              --attribute-definitions AttributeName=LockID,AttributeType=S \
              --key-schema AttributeName=LockID,KeyType=HASH \
              --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
              --region "$REGION"
            echo "Tabla DynamoDB creada: $TABLE"
          else
            echo "Tabla DynamoDB ya existe: $TABLE"
          fi

          # Crear secrets automáticos con PAT si existe
          if [ -n "${{ secrets.PA_TOKEN }}" ]; then
            gh secret set BACKEND_BUCKET --body "$BUCKET"
            gh secret set BACKEND_TABLE  --body "$TABLE"
          else
            echo "No se creó secret: falta PAT"
            echo "BACKEND_BUCKET=$BUCKET"
            echo "BACKEND_TABLE=$TABLE"
          fi
