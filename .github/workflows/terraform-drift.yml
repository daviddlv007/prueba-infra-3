name: 'Terraform Drift Detection'

on:
  schedule:
    - cron: '0 8 * * 1-5' # Lunes a Viernes a las 8 AM
  workflow_dispatch:

env:
  TF_VERSION: 1.13.1
  AWS_REGION: us-east-1

jobs:
  terraform-drift:
    name: 'Terraform Drift Detection'
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Init
      run: |
        echo "Initializing Terraform for drift detection..."
        cd ./infra/terraform/environments/dev
        
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        PROJECT_NAME=$(basename $(git rev-parse --show-toplevel))
        
        terraform init -reconfigure -input=false \
          -backend-config="bucket=terraform-state-${ACCOUNT_ID}-dev" \
          -backend-config="key=${PROJECT_NAME}/dev/terraform.tfstate" \
          -backend-config="dynamodb_table=terraform-locks-${ACCOUNT_ID}" \
          -backend-config="region=us-east-1" \
          -backend-config="encrypt=true"
        
        echo "âœ… Terraform initialized for drift detection"
      working-directory: ./
      
    - name: Check for drift
      run: |
        terraform plan -detailed-exitcode -lock-timeout=5m
      working-directory: ./infra/terraform/environments/dev
      continue-on-error: true